devtools::document()
test <- lm(mpg ~ cyl, data = mtcars)
check_assumptions <- function(model_name) {
####
# adds residuals
####
resid <- residuals(model_name)
####
# Most tests
####
normality <- moments::jarque.test(resid) # residual test
constant_variance <- car::ncvTest(model_name) # constant variance
autocorrelation <- car::durbinWatsonTest(model_name) # autocorrelation
# putting most tests together
tests <- c("normality", "constant variance", "auto correlation")
values <- c(signif(as.numeric(normality$p.value), 3),
signif(as.numeric(constant_variance$p), 3), signif(as.numeric(autocorrelation$p), 3))
problems <- ifelse(values < 0.05, "problem", "no problem")
tests <- cbind(tests, values, problems)
####
# adding multicollinearity
####
viffy <- ifelse(length(model_name$coefficients) < 3,
"only one IV", max(car::vif(model_name)))
viffy_results <- ifelse(viffy == "only one IV", "NA",
ifelse(viffy > 10, "problem",
ifelse(viffy > 4, "potential problem", "no problem")))
vif <- c("multicollinearity: vif", viffy, viffy_results)
####
# adding conditional mean of the errors
####
resid <- residuals(model_name)
# running correlation between variables and residual (conditional mean of error is zero)
correlation <- sapply(model_name$model,
function(x) ifelse(is.factor(x),
max(abs(tapply(resid, x, mean))),
cor(resid, x)))
cor_problem <- ifelse(correlation > 0.2,
"potential problem, unkown if factor", "no problem, unknown if factor")
cor_output <-cbind(paste0("conditional mean: ",
variable.names(model_name)), signif(correlation, 3), cor_problem)
correlation_output <- cor_output[-1,]
# creating the object to return
testing <- data.frame(rbind(tests, vif, correlation_output))
rownames(testing) <- c()
# testing$values <- round(as.numeric(testing$values), 3)
return(testing)
}
check_assumptions(test)
cars
#'
#' This function returns a graph that shows variable missingness across the
#' entire dataset.
#'
#' @return If there is no missing data the function will return a string
#' informing you that there is no missing data. Otherwise a graph will
#' appear showing the variable one the y axis and the percent missing on the x-axis.
#'
#' @examples
#' c
check_missing_variables(cars)
check_missing_variables <- function(dataset) {
column_missing_data <- sapply(dataset, function(x) sum(is.na(x)))
columns <- colnames(dataset)
variable_missing_data <- as.data.frame(cbind(as.numeric(column_missing_data),
columns))
variable_missing_data$num_rows_NA <- as.numeric(as.character(variable_missing_data$V1))
if(all(variable_missing_data[, 1] == 0)) {
return("Yay! You have no missing data")
} else {
variable_missing_data %>%
dplyr::mutate(proportion_missing = num_rows_NA / nrow(dataset),
percent_missing = (proportion_missing * 100)) %>%
dplyr::arrange(desc(percent_missing)) %>%
dplyr::select(-V1) %>%
dplyr::filter(percent_missing != 0) %>%
dplyr::mutate(columns = reorder(columns, percent_missing)) %>%
ggplot(aes(factor(columns), percent_missing, fill = percent_missing)) +
geom_col()  +
labs(x = "Original Variables", y ="Percentage of Observations that are Missing",
fill = "Percent Missing") +
coord_flip() +
scale_fill_gradient2(limits = c(0, 100), low = "light blue", high = "dark red", mid = "light blue")
}
}
#'
#' This function returns a graph that shows variable missingness across the
#' entire dataset.
#'
#' @return If there is no missing data the function will return a string
#' informing you that there is no missing data. Otherwise a graph will
#' appear showing the variable one the y axis and the percent missing on the x-axis.
#'
#' @examples
#' c
check_missing_variables(cars)
airquality
check_missing_variables(airquality)
check_missing_variables(airquality)
#' This function returns a graph that shows variable missingness across the
#' entire dataset.
#'
#' @return If there is no missing data the function will return a string
#' informing you that there is no missing data. Otherwise a graph will
#' appear showing the variable one the y axis and the percent missing on the x-axis.
#'
#' @examples
#' check_missing_variables(cars) # no missing data
#' check_missing_variables(airquality)
check_missing_variables(cars)
check_missing_variables(airquality)
library(tidyverse)
check_missing_variables(airquality)
test <- seq(1:10)
check_missing_variables(test)
cars <- as.matrix(cars)
cars
str(cars)
cars2 <- as.matrix(cars)
check_missing_variables(cars2)
check_missing_variables("Richard is great")
library(devtools)
document()
model <- lm(mpg ~ cyl, data = mtcars)
check_assumptions(model)
cars
model2 <- lm(mpg ~ cyl + wt, data = ggplot2::mtcars)
model2 <- lm(mpg ~ cyl + wt, data = mtcars)
check_assumptions(model2)
document()
?check_assumptions
document()
document
document()
?check_assumptions
?tidy_labels
accesslex_colors <- c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0")
accesslex_colors <- data.frame(c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0"))
View(accesslex_colors)
accesslex_color <- c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0"))
accesslex_color <- c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0")
accesslex_colors$ <- rownames(accesslex_color)
rownames(accesslex_colors)
accesslex_colors$name <- rownames(accesslex_color)
accesslex_colors$hex <- accesslex_color
accesslex_colors
View(accesslex_colors)
accesslex_colors$name <- rownames(accesslex_color)
accesslex_colors$hex <- accesslex_color
accesslex_colors
View(accesslex_colors)
library(tidyverse)
accesslex_colors %>%
rename(name = 1)
accesslex_colors %>%
rownames_to_column()
accesslex_color <- c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0")
accesslex_colors$hex <- accesslex_color
accesslex_colors <- data.frame()
accesslex_colors %>%
rownames_to_column(accesslex_color)
accesslex_colors$hex <- accesslex_color
accesslex_colors <- data.frame(
names = c("main blue", "main light blue", "second yellow", "second orange",
"second red", "second maroon", "third green", "third blue gray", "third light blue"),
hex = accesslex_color
)
accesslex_colors
library(devtools)
use_data(accesslex_colors, pkg = "researchr")
use_data(accesslex_colors, pkg = "researchr")
use_data(accesslex_colors, pkg = "researchr", internal = TRUE)
use_data(as.name(accesslex_colors), pkg = "researchr", internal = TRUE)
accesslex_colors <- as_tibble(
names = c("main blue", "main light blue", "second yellow", "second orange",
"second red", "second maroon", "third green", "third blue gray", "third light blue"),
hex = accesslex_color
)
knitr::opts_chunk$set(echo = TRUE)
check_missing_variables <- function(dataset) {
column_missing_data <- sapply(dataset, function(x) sum(is.na(x)))
columns <- colnames(dataset)
variable_missing_data <- as.data.frame(cbind(as.numeric(column_missing_data),
columns))
variable_missing_data$num_rows_NA <- as.numeric(as.character(variable_missing_data$V1))
if(all(variable_missing_data[, 1] == 0)) {
return("Yay! You have no missing data")
} else {
variable_missing_data %>%
dplyr::mutate(proportion_missing = num_rows_NA / nrow(dataset),
percent_missing = (proportion_missing * 100)) %>%
dplyr::arrange(desc(percent_missing)) %>%
dplyr::select(-V1) %>%
dplyr::filter(percent_missing != 0) %>%
dplyr::mutate(columns = reorder(columns, percent_missing)) %>%
ggplot(aes(factor(columns), percent_missing, fill = percent_missing)) +
geom_col()  +
labs(x = "Original Variables", y ="Percentage of Observations that are Missing",
fill = "Percent Missing") +
coord_flip() +
scale_fill_gradient2(limits = c(0, 100), low = "light blue", high = "dark red", mid = "light blue")
}
}
mtcars
check_missing_variables(mtcars)
mtcars
mtcars %>%
mutate(mpt = ifelse(mpg > 20, NA, mpg))
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg))
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl = 8, NA, cyl))
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 8, NA, cyl))
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 8, NA, cyl)) %>%
check_missing_variables()
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 6, NA, cyl)) %>%
check_missing_variables()
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 6, NA, cyl))
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 6, NA, cyl),
hp < 80, NA, hp) %>%
check_missing_variables()
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 6, NA, cyl),
hp = hp < 80, NA, hp) %>%
check_missing_variables()
mtcars %>%
mutate(mpg = ifelse(mpg > 20, NA, mpg),
cyl = ifelse(cyl == 6, NA, cyl),
hp = ifelse(hp < 80, NA, hp)) %>%
check_missing_variables()
accesslex_colors <- as_tibble(
names = c("main blue", "main light blue", "second yellow", "second orange",
"second red", "second maroon", "third green", "third blue gray", "third light blue"),
hex = accesslex_color
)
accesslex_colors <- tibble(
names = c("main blue", "main light blue", "second yellow", "second orange",
"second red", "second maroon", "third green", "third blue gray", "third light blue"),
hex = accesslex_color
)
use_data(as.name(accesslex_colors), pkg = "researchr", internal = TRUE)
use_data(accesslex_colors, pkg = "researchr", internal = TRUE)
accesslex_colors
dir()
setwd("H:/Methods and Tech/Packages/researchr")
dir()
use_data(accesslex_colors, pkg = researchr, internal = TRUE)
use_data(accesslex_colors, internal = TRUE)
dir()
use_data(accesslex_colors, "accesslex_colors", pkg = "researchr", internal = TRUE)
use_data(accesslex_colors, "accesslex_colors", internal = TRUE)
View(accesslex_colors)
accesslex_color <- c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0")
accesslex_colors <- c(`main blue` = "#002b49",
`main light blue` = "#006072",
`second yellow` = "#d18a00",
`second orange` = "#d35e13",
`second red` = "#8f1336",
`second maroon` = "#632d4f",
`third green` = "#556221",
`third blue gray` = "#4b4f54",
`third light blue` = "#7e9bc0")
use_data(accesslex_colors, "accesslex_colors", internal = TRUE)
use_data(accesslex_colors, internal = TRUE)
